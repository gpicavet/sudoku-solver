const test=require('tape');
const isEqual=require('is-equal');
var SudokuSolver=require('./solver.js');

test('9x9', function (t) {
  var board = [
         ["8", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", "3", "6", ".", ".", ".", ".", "."],
         [".", "7", ".", ".", "9", ".", "2", ".", "."],
         [".", "5", ".", ".", ".", "7", ".", ".", "."],
         [".", ".", ".", ".", "4", "5", "7", ".", "."],
         [".", ".", ".", "1", ".", ".", ".", "3", "."],
         [".", ".", "1", ".", ".", ".", ".", "6", "8"],
         [".", ".", "8", "5", ".", ".", ".", "1", "."],
         [".", "9", ".", ".", ".", ".", "4", ".", "."]
     ];

  var result = [
    [ '8', '1', '2', '7', '5', '3', '6', '4', '9' ],
    [ '9', '4', '3', '6', '8', '2', '1', '7', '5' ],
    [ '6', '7', '5', '4', '9', '1', '2', '8', '3' ],
    [ '1', '5', '4', '2', '3', '7', '8', '9', '6' ],
    [ '3', '6', '9', '8', '4', '5', '7', '2', '1' ],
    [ '2', '8', '7', '1', '6', '9', '5', '3', '4' ],
    [ '5', '2', '1', '9', '7', '4', '3', '6', '8' ],
    [ '4', '3', '8', '5', '2', '6', '9', '1', '7' ],
    [ '7', '9', '6', '3', '1', '8', '4', '5', '2' ] ]


  var solver = new SudokuSolver();
  board = solver.solve(board);
  t.ok(isEqual(board, result));
  t.end();
});

test('16x16', function (t) {
  var board = [
       [".", "E", ".", ".",  "4", ".", ".", ".",  ".", ".", "2", "3",  ".", ".", "G", "7"],
       ["8", ".", ".", ".",  ".", "5", ".", "1",  ".", "4", "D", ".",  ".", ".", "2", "A"],
       ["G", "3", ".", ".",  "B", ".", ".", ".",  "7", "1", ".", "8",  ".", "5", ".", "."],
       [".", ".", "7", ".",  ".", ".", "D", "A",  "C", "E", ".", ".",  ".", ".", ".", "."],

       ["6", "A", "E", ".",  "7", ".", "3", ".",  ".", ".", ".", "G",  ".", "9", ".", "5"],
       [".", ".", ".", ".",  "F", "1", "G", ".",  "3", ".", "B", ".",  ".", ".", "7", "E"],
       [".", "1", "4", ".",  ".", "8", "A", ".",  "E", "D", ".", ".",  "2", "B", "F", "."],
       [".", ".", ".", ".",  ".", "4", ".", ".",  ".", "C", "A", ".",  "D", "G", ".", "."],

       ["B", ".", "2", "C",  "E", ".", ".", "5",  ".", ".", ".", ".",  "A", ".", "D", "."],
       ["3", ".", "8", ".",  "6", ".", "4", ".",  ".", "9", "5", "B",  "F", ".", ".", "."],
       ["1", ".", ".", ".",  ".", "2", ".", ".",  "D", "G", "E", ".",  ".", ".", "4", "."],
       [".", ".", ".", ".",  "1", ".", "B", "G",  ".", ".", "7", "F",  ".", "C", ".", "6"],

       ["C", ".", ".", "B",  ".", ".", ".", "6",  ".", ".", ".", ".",  ".", ".", ".", "."],
       [".", "7", ".", ".",  ".", ".", "5", "C",  ".", "3", ".", "2",  "8", ".", ".", "."],
       [".", "2", "1", ".",  ".", ".", ".", ".",  ".", "B", ".", "A",  ".", "6", ".", "D"],
       [".", ".", ".", "D",  ".", "B", "8", "7",  ".", ".", ".", "E",  ".", "3", "A", "."]
    ];

  var result = [
[ 'F',    'E',    '5',    '1',    '4',    '6',    'C',    '8',    'B',    'A',    '2',    '3',    '9',    'D',    'G',    '7' ],  
[ '8',    'C',    'B',    '9',    '3',    '5',    '7',    '1',    'G',    '4',    'D',    '6',    'E',    'F',    '2',    'A' ],  
[ 'G',    '3',    'D',    'A',    'B',    'E',    '2',    'F',    '7',    '1',    '9',    '8',    'C',    '5',    '6',    '4' ],  
[ '2',    '4',    '7',    '6',    '9',    'G',    'D',    'A',    'C',    'E',    'F',    '5',    '3',    '1',    '8',    'B' ],  
[ '6',    'A',    'E',    'F',    '7',    'D',    '3',    'B',    '1',    '2',    '8',    'G',    '4',    '9',    'C',    '5' ],  
[ 'D',    '9',    'C',    '8',    'F',    '1',    'G',    '2',    '3',    '5',    'B',    '4',    '6',    'A',    '7',    'E' ], 
[ '5',    '1',    '4',    'G',    'C',    '8',    'A',    '9',    'E',    'D',    '6',    '7',    '2',    'B',    'F',    '3' ],  
[ '7',    'B',    '3',    '2',    '5',    '4',    '6',    'E',    'F',    'C',    'A',    '9',    'D',    'G',    '1',    '8' ],  
[ 'B',    'F',    '2',    'C',    'E',    '7',    '9',    '5',    '4',    '6',    '3',    '1',    'A',    '8',    'D',    'G' ],  
[ '3',    'G',    '8',    '7',    '6',    'C',    '4',    'D',    'A',    '9',    '5',    'B',    'F',    '2',    'E',    '1' ],  
[ '1',    '6',    'A',    '5',    '8',    '2',    'F',    '3',    'D',    'G',    'E',    'C',    'B',    '7',    '4',    '9' ],  
[ 'E',    'D',    '9',    '4',    '1',    'A',    'B',    'G',    '2',    '8',    '7',    'F',    '5',    'C',    '3',    '6' ],  
[ 'C',    '8',    'F',    'B',    'A',    '3',    '1',    '6',    '5',    '7',    '4',    'D',    'G',    'E',    '9',    '2' ],  
[ 'A',    '7',    'G',    'E',    'D',    '9',    '5',    'C',    '6',    '3',    '1',    '2',    '8',    '4',    'B',    'F' ],  
[ '9',    '2',    '1',    '3',    'G',    'F',    'E',    '4',    '8',    'B',    'C',    'A',    '7',    '6',    '5',    'D' ],  
[ '4',    '5',    '6',    'D',    '2',    'B',    '8',    '7',    '9',    'F',    'G',    'E',    '1',    '3',    'A',    'C' ]];


  var solver = new SudokuSolver();
  board = solver.solve(board);
  t.ok(isEqual(board, result));
  t.end();
});


test('9x9_invalid', function (t) {
  var board = [
         ["8", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", "3", "5", ".", ".", ".", ".", "."],
         [".", "7", ".", ".", "9", ".", "2", ".", "."],
         [".", "5", ".", ".", ".", "7", ".", ".", "."],
         [".", ".", ".", ".", "4", "5", "7", ".", "."],
         [".", ".", ".", "1", ".", ".", ".", "3", "."],
         [".", ".", "1", ".", ".", ".", ".", "6", "8"],
         [".", ".", "8", "5", ".", ".", ".", "1", "."],
         [".", "9", ".", ".", ".", ".", "4", ".", "."]
     ];
  var solver = new SudokuSolver();
  try{
    board = solver.solve(board);
    t.ko();
  } catch (e) {
    t.ok(isEqual(e,"invalid board"));
    t.end();
  }

});