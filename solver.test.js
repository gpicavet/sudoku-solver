const test=require('tape');
const isEqual=require('is-equal');
var SudokuSolver=require('./solver.js');

test('9x9', function (t) {
  var board = [
         ["8", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", "3", "6", ".", ".", ".", ".", "."],
         [".", "7", ".", ".", "9", ".", "2", ".", "."],
         [".", "5", ".", ".", ".", "7", ".", ".", "."],
         [".", ".", ".", ".", "4", "5", "7", ".", "."],
         [".", ".", ".", "1", ".", ".", ".", "3", "."],
         [".", ".", "1", ".", ".", ".", ".", "6", "8"],
         [".", ".", "8", "5", ".", ".", ".", "1", "."],
         [".", "9", ".", ".", ".", ".", "4", ".", "."]
     ];

  var result = [
    [ '8', '1', '2', '7', '5', '3', '6', '4', '9' ],
    [ '9', '4', '3', '6', '8', '2', '1', '7', '5' ],
    [ '6', '7', '5', '4', '9', '1', '2', '8', '3' ],
    [ '1', '5', '4', '2', '3', '7', '8', '9', '6' ],
    [ '3', '6', '9', '8', '4', '5', '7', '2', '1' ],
    [ '2', '8', '7', '1', '6', '9', '5', '3', '4' ],
    [ '5', '2', '1', '9', '7', '4', '3', '6', '8' ],
    [ '4', '3', '8', '5', '2', '6', '9', '1', '7' ],
    [ '7', '9', '6', '3', '1', '8', '4', '5', '2' ] ]


  var solver = new SudokuSolver();
  board = solver.solve(board);
  t.ok(isEqual(board, result));
  t.end();
});

test('16x16', function (t) {
  var board = [
         [".", ".", ".", ".", "8", "A", "B", ".", "F", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", ".", "."]
     ];


  var solver = new SudokuSolver();
  board = solver.solve(board);
  console.log(board);
  t.end();
});
